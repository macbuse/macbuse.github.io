#! /home/gregmcshane/anaconda3/bin/python3.6 

import re, sys, os, argparse
from svgpathtools import svg2paths, wsvg

HTML = '''<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <style>
  body {{
  background-color: #ffffff;
    }}
  {}
  </style>
    
</head>
<body>
{}
</body>
  '''

anim_params = '''    
#{} {{ stroke-dasharray:  {};
      stroke-dashoffset: {};
      opacity : 0;
      animation: offset {:.2f}s linear forwards;
      animation-delay: {:.2f}s;
      animation-iteration-count: 1;
    }} '''

anim_loop = '''
@keyframes offset {
    to {
    stroke-dashoffset: 0;  opacity: 1;
    }
'''

PP_PATH = re.compile('<path(.*?)\sd=', re.DOTALL)
PP_METADATA = re.compile('<metadata>.*?</metadata>',re.DOTALL)
PP_UNITS = re.compile('(\d+)pt')

def units_cb(mm):
    return '%spx'%mm.group(1)

def mk_anim(src_fn, speed=1.):
    
    def path_cb(mm):
        return '<path id="%s" %s d='%(path_ids.pop(0), mm.group(1))

    with open(src_fn, 'r') as fp:
        data = fp.read()
    
    #ditch the metadata - there's a thumbnail :(
    data = re.sub(PP_METADATA, '', data)

    paths, attributes = svg2paths(src_fn)
    path_ids = ['p%d'%k for k,x in enumerate(paths) ]
    path_ids_cp = path_ids[:]

    data = re.sub(PP_UNITS, units_cb, data)
    svg = re.sub(PP_PATH, path_cb, data)

    paths, attributes = svg2paths(src_fn)

    lengths = [int(x.length()) for x in paths]

    rolling = [0]
    for l in lengths:
        rolling.append(rolling[-1] + l)

    animations = [ anim_params.format('p%d'%k,l,l,l/500/speed, d/500/speed) 
                                  for k,l,d in zip(range(len(lengths)), lengths, rolling)  ]

    animations.append(anim_loop)
    style = ' '.join(animations) 

    with open('%s.html'%src_fn.split('.')[0],'w') as fp:
        fp.write(HTML.format(style, svg))

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('fn')
    parser.add_argument("-s", default=1.0)
    res = parser.parse_args()
    print(res.fn)

    if len(sys.argv) < 2:
        print('usage: %s file.svg'%sys.argv[0])
        sys.exit(1)
    mk_anim(res.fn, speed=float(res.s))

